// Top-level build file where you can add configuration options common to all sub-projects/modules.
if (isModule.toBoolean()) {
    // 注：需要配置符号表时，使用bugly插件
    apply plugin: 'bugly'
    bugly {
        appId = '0e8a6a631e'
        appKey = '5722acf9-c696-4b07-bfa2-10a0fb7194d4'
    }
}
project.ext {
    setDefaultConfig = {
        extension ->
            extension.android {
                compileSdkVersion rootProject.ext.android["compileSdkVersion"]
                buildToolsVersion rootProject.ext.android["buildToolsVersion"]
                defaultConfig {
                    minSdkVersion rootProject.ext.android["minSdkVersion"]
                    targetSdkVersion rootProject.ext.android["targetSdkVersion"]
                    versionCode rootProject.ext.android["versionCode"]
                    versionName rootProject.ext.android["versionName"]
                    flavorDimensions "color"
                    multiDexEnabled true
                    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
                    javaCompileOptions {
                        annotationProcessorOptions {
                            println(""+extension.getName())
                            arguments = [moduleName: extension.getName()]
                        }
                    }


                }

                lintOptions {
                    abortOnError false
                }
                compileOptions {
                    sourceCompatibility 1.8
                    targetCompatibility 1.8
                }

            }
            extension.dependencies {
                implementation fileTree(dir: 'libs', include: ['*.jar'])
                annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
            }
    }
    setDependencies = {
        extension ->
            extension.dependencies {
                implementation fileTree(dir: 'libs', include: ['*.jar'])
                annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
            }
    }

}
